name: Create Release and Upload Asset

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Zip
        run: sudo apt-get install zip

      - name: Install jq
        run: sudo apt-get install jq

      - name: Create Zip File
        run: zip -r release-${GITHUB_REF##refs/tags/}.zip ./*
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Check if Release Exists
        id: check_release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} | jq '.id')
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
        continue-on-error: true

      - name: Create Release if Not Exists
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        if: env.RELEASE_ID == 'null'

      - name: Get Release Upload URL
        id: get_upload_url
        run: |
          UPLOAD_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} | jq '.upload_url' | tr -d '"')
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV
        if: env.RELEASE_ID != 'null'

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL || steps.create_release.outputs.upload_url }} 
          asset_path: ./release-${{ github.ref_name }}.zip
          asset_name: release-${{ github.ref_name }}.zip
          asset_content_type: application/zip
